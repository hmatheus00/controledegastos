{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hmath\\\\Documents\\\\projetos\\\\controleDeVendas\\\\controleDeGastos\\\\controledegastos\\\\frontend\\\\src\\\\components\\\\PieChart\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { BASE_URL } from '../../utils/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockData = {\n  series: [500, 1500, 800],\n  labels: ['DIGIO', 'NEXT', 'NUBANK']\n};\nconst options = {\n  legend: {\n    show: true\n  }\n};\nexport default function PieChart() {\n  _s();\n\n  const [labels, setLabels] = useState([]);\n  const [series, setSeries] = useState([]);\n  useEffect(() => {\n    axios.get(`${BASE_URL}/compras`).then(res => {\n      const data = res.data;\n      const namesLabels = data.map(compra => compra.produto);\n      setLabels(namesLabels);\n      const valueSeries = data.map(compra => compra.valor);\n      setSeries(valueSeries);\n      console.log(series);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      labels: labels\n    },\n    series: series,\n    type: \"pie\",\n    height: \"450\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PieChart, \"Ya6QTnaFe/WciX2S1tbP03gY/xw=\");\n\n_c = PieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"sources":["C:/Users/hmath/Documents/projetos/controleDeVendas/controleDeGastos/controledegastos/frontend/src/components/PieChart/index.tsx"],"names":["axios","useEffect","useState","Chart","BASE_URL","mockData","series","labels","options","legend","show","PieChart","setLabels","setSeries","get","then","res","data","namesLabels","map","compra","produto","valueSeries","valor","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAGA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,CADK;AAEbC,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB;AAFK,CAAjB;AAIA,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAE;AADF;AADI,CAAhB;AAMA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B,QAAM,CAACJ,MAAD,EAASK,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACI,MAAD,EAASO,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZD,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAEV,QAAS,UAAtB,EACKW,IADL,CACWC,GAAD,IAAS;AACX,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAjB;AACA,YAAMC,WAAW,GAAGD,IAAI,CAACE,GAAL,CAAWC,MAAD,IAAoBA,MAAM,CAACC,OAArC,CAApB;AACAT,MAAAA,SAAS,CAACM,WAAD,CAAT;AACA,YAAMI,WAAW,GAAGL,IAAI,CAACE,GAAL,CAAUC,MAAD,IAAoBA,MAAM,CAACG,KAApC,CAApB;AACAV,MAAAA,SAAS,CAACS,WAAD,CAAT;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AACH,KATL;AAUH,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACI,QAAC,KAAD;AACI,IAAA,OAAO,EAAE,EAAE,GAAGE,OAAL;AAAcD,MAAAA,MAAM,EAAEA;AAAtB,KADb;AAEI,IAAA,MAAM,EAAED,MAFZ;AAGI,IAAA,IAAI,EAAC,KAHT;AAII,IAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA3BuBK,Q;;KAAAA,Q","sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { BASE_URL } from '../../utils/request';\r\nimport { Compra } from '../../utils/types';\r\n\r\nconst mockData = {\r\n    series: [500, 1500, 800],\r\n    labels: ['DIGIO', 'NEXT', 'NUBANK']\r\n}\r\nconst options = {\r\n    legend: {\r\n        show: true\r\n    }\r\n}\r\n\r\nexport default function PieChart() {\r\n\r\n    const [labels, setLabels] = useState([]);\r\n    const [series, setSeries] = useState([]);\r\n    \r\n    useEffect(() => {\r\n\r\n        axios.get(`${BASE_URL}/compras`)\r\n            .then((res) => {\r\n                const data = res.data;\r\n                const namesLabels = data.map( (compra: Compra) => compra.produto);\r\n                setLabels(namesLabels);\r\n                const valueSeries = data.map((compra: Compra) => compra.valor);\r\n                setSeries(valueSeries);\r\n\r\n                console.log(series);\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <Chart\r\n            options={{ ...options, labels: labels }}\r\n            series={series}\r\n            type=\"pie\"\r\n            height=\"450\"\r\n        />\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}